# Arquivo de configuração do Docker Compose para o projeto Bolt AI
# Contém as definições para os ambientes de produção, desenvolvimento e pré-construído.

services:
  # ------------------------------------------------------------------
  # SERVIÇO PARA PRODUÇÃO (O que você deve usar no Coolify)
  # ------------------------------------------------------------------
  # Este serviço constrói a imagem Docker otimizada para produção
  # e inicia a aplicação.
  # No painel do Coolify, você deve especificar 'app-prod' como o serviço a ser implantado.
  app-prod:
    image: bolt-ai:production
    build:
      context: .
      dockerfile: Dockerfile
      target: bolt-ai-production # Usa o estágio de 'production' do seu Dockerfile
    ports:
      - '5173:5173'
    env_file: '.env.local'
    environment:
      - NODE_ENV=production
      - COMPOSE_PROFILES=production
      # As variáveis abaixo servem como dicas para o Coolify e para a aplicação
      - PORT=5173
      - GROQ_API_KEY=${GROQ_API_KEY}
      - HuggingFace_API_KEY=${HuggingFace_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPEN_ROUTER_API_KEY=${OPEN_ROUTER_API_KEY}
      - GOOGLE_GENERATIVE_AI_API_KEY=${GOOGLE_GENERATIVE_AI_API_KEY}
      - OLLAMA_API_BASE_URL=${OLLAMA_API_BASE_URL}
      - XAI_API_KEY=${XAI_API_KEY}
      - TOGETHER_API_KEY=${TOGETHER_API_KEY}
      - TOGETHER_API_BASE_URL=${TOGETHER_API_BASE_URL}
      - AWS_BEDROCK_CONFIG=${AWS_BEDROCK_CONFIG}
      - VITE_LOG_LEVEL=${VITE_LOG_LEVEL:-debug}
      - DEFAULT_NUM_CTX=${DEFAULT_NUM_CTX:-32768}
      - RUNNING_IN_DOCKER=true
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    command: pnpm run dockerstart # Comando para iniciar a aplicação em produção
    profiles:
      - production

  # ------------------------------------------------------------------
  # SERVIÇO PARA DESENVOLVIMENTO LOCAL
  # ------------------------------------------------------------------
  # Este serviço é otimizado para o desenvolvimento na sua máquina.
  # Ele monta o código-fonte localmente para permitir o hot-reload (atualização automática).
  app-dev:
    image: bolt-ai:development
    build:
      target: bolt-ai-development # Usa o estágio de 'development' do seu Dockerfile
    env_file: '.env.local'
    environment:
      - NODE_ENV=development
      - VITE_HMR_PROTOCOL=ws
      - VITE_HMR_HOST=localhost
      - VITE_HMR_PORT=5173
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - PORT=5173
      - GROQ_API_KEY=${GROQ_API_KEY}
      - HuggingFace_API_KEY=${HuggingFace_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPEN_ROUTER_API_KEY=${OPEN_ROUTER_API_KEY}
      - XAI_API_KEY=${XAI_API_KEY}
      - GOOGLE_GENERATIVE_AI_API_KEY=${GOOGLE_GENERATIVE_AI_API_KEY}
      - OLLAMA_API_BASE_URL=${OLLAMA_API_BASE_URL}
      - TOGETHER_API_KEY=${TOGETHER_API_KEY}
      - TOGETHER_API_BASE_URL=${TOGETHER_API_BASE_URL}
      - AWS_BEDROCK_CONFIG=${AWS_BEDROCK_CONFIG}
      - VITE_LOG_LEVEL=${VITE_LOG_LEVEL:-debug}
      - DEFAULT_NUM_CTX=${DEFAULT_NUM_CTX:-32768}
      - RUNNING_IN_DOCKER=true
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - type: bind
        source: .
        target: /app
        consistency: cached
      - /app/node_modules
    ports:
      - '5173:5173'
    command: pnpm run dev --host 0.0.0.0 # Comando para rodar em modo de desenvolvimento
    profiles: ['development', 'default']

  # ------------------------------------------------------------------
  # SERVIÇO PARA AMBIENTE PRÉ-CONSTRUÍDO (PREBUILT)
  # ------------------------------------------------------------------
  # Este serviço usa uma imagem pública já pronta.
  app-prebuild:
    image: ghcr.io/stackblitz-labs/bolt.diy:latest
    ports:
      - '5173:5173'
    environment:
      - NODE_ENV=production
      - COMPOSE_PROFILES=production
      - PORT=5173
      - OLLAMA_API_BASE_URL=http://127.0.0.1:11434
      - DEFAULT_NUM_CTX=${DEFAULT_NUM_CTX:-32768}
      - RUNNING_IN_DOCKER=true
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    command: pnpm run dockerstart
    profiles:
      - prebuilt